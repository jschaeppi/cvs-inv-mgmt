def imageBuild
pipeline {
    agent any
    environment {
      HOME = '.'
    }
    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "Maven"
    }

    stages {
        stage('Build angular app') {
          agent {
            docker {
              image 'node:14.16-buster'
            }
          }
          steps {
          // Get some code from a GitHub repository
          git 'https://github.com/jschaeppi/cvs-inv-mgmt.git'
               sh 'cd frontend && npm install'
               sh 'cd frontend && npm run build'
           }
         post {
           success {
              echo "Angular compiled succeeded"
           }

           failure {
              echo "Angular build failed"
            }
          }
        }

        stage('Build docker image angular compilation') {
          steps {
              script {
                withCredentials([usernamePassword(credentialsId: 'docker-login', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                  dir("frontend") {
                    sh "cp ../../Cvs Inventory Mgmt Frontend@2/frontend/dist ."
                    def registry = "jschaeppi6609/inv-mgmt-frontend"
                    imageBuild = docker.build( registry + ":$BUILD_NUMBER", "-f Dockerfile .")
                    sh "cd frontend && docker login -u $USER -p $PASS"
                    sh "cd frontend && docker push $imageBuild.id"
                  }
                }
            }
          }
          post {
            success {
              echo "Docker image build $BUILD_NUMBER was built successfully"
              sh "docker rmi $imageBuild.id"
            }

            failure {
              echo "Docker image build $BUILD_NUMBER failed!"
              sh "docker rmi $imageBuild.id"
              }
            }
          }
    }
}
