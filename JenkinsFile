def imageBuild
pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "Maven"
    }

    stages {
        stage('Build spring boot jar') {
            agent {
                    docker {
                    image 'maven:3-openjdk-11'
                 }
            }
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/jschaeppi/cvs-inv-mgmt.git'

                // Run Maven on a Unix agent.
                sh "mvn -DskipTests clean package"
            }
                post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                    success {
                        echo "Jar file creation succeeded"
                    }

                    failure {
                        echo "Jar file creation failed"
                    }
                }
        }

        stage('Build docker image from jar') {
            steps {
                script {
                withCredentials([usernamePassword(credentialsId: 'docker-login', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                    sh 'cp -r ../Cvs\ Inventory\ Mgmt@2/target .'
                    def registry = "jschaeppi6609/cvs-inv-mgmt"
                    imageBuild = docker.build registry + ":$BUILD_NUMBER"
                    sh "docker login -u $USER -p $PASS"
                    sh "docker push $imageBuild.id"
                    }
                }
            }
            post {
                success {
                    echo "Docker image build $BUILD_NUMBER was built successfully"
                    sh "docker rmi $imageBuild.id"
                }

                failure {
                    echo "Docker image build $BUILD_NUMBER failed!"
                    sh "docker rmi $imageBuild.id"
                }
            }
        }
    }
}
